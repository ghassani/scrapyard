{% macro specification_actions(specification) %}
    <a href="javascript:void;" data-toggle="tooltip" data-placement="top" title="Edit Specification"><i class="fa fa-pencil-square-o"></i></a>
    <a href="javascript:void;" data-toggle="tooltip" data-placement="top" title="Delete Specification"><i class="fa fa-trash-o"></i></a>
    <a href="javascript:void;" data-toggle="tooltip" data-placement="top" title="Manage Values"><i class="fa fa-database"></i></a>
{% endmacro %}

{% import _self as renderHelper %}
<table class="table table-striped table-bordered table-condensed product-specifications-table">
    <thead>
    <tr>
        <th width="250">Specification</th>
        <th>Value(s)</th>
        <th width="100"></th>
    </tr>
    </thead>
    <tfoot>
    <tr>
        <th colspan="3" class="text-right">
            <a class="btn btn-primary btn-sm add-product-specification" href="javascript:void(0);" title="Add Specification"><i class="icon icon-plus"></i> Add Specification</a>
        </th>
    </tr>
    </tfoot>
    <tbody>
    {% set renderedMultipleValueSpecifications = [] %}

    {% for specification in product.specifications %}
            <tr>
                {% if specification.option.optionType == COMMERCE_SPECIFICATION_OPTION_TYPE_SINGLE_VALUE %}
                    <td>
                        <div>{{ specification.option.name }}</div>
                        <small>{{ specification.option.key }}</small>
                    </td>
                    <td>
                        {{ specification.value.publicValue|length ? specification.value.publicValue : specification.value.value }}
                    </td>
                    <td>{{ renderHelper.specification_actions(specification) }}</td>
                {% elseif specification.option.optionType == COMMERCE_SPECIFICATION_OPTION_TYPE_MULTIPLE_VALUE and specification.option.key not in renderedMultipleValueSpecifications %}
                    {%  set renderedMultipleValueSpecifications = renderedMultipleValueSpecifications|merge([specification.option.key]) %}
                    <td>
                        <div>{{ specification.option.name }}</div>
                        <small>{{ specification.option.key }}</small>
                    </td>
                    <td>
                        <ul class="list-unstyled unstyled">
                            {% for spec in product.getSpecification(specification.option.key) %}
                                <li>{{ spec.value.value }}</li>
                            {% endfor %}
                        </ul>
                    </td>
                    <td>{{ renderHelper.specification_actions(specification) }}</td>
                {% endif %}



            </tr>
    {% endfor %}
    </tbody>
</table>


